nohup: 忽略输入
ckpt/source/pda/office-home/P
Namespace(batch_size=64, bottleneck=256, class_num=50, classifier='bn', cls_par=0.6, da='pda', distance='cosine', dset='office-home', ent=True, ent_par=1.0, epsilon=1e-05, extra_class=1, gent=True, gpu_id='1', interval=10, issave=False, layer='wn', lr=0.01, lr_decay1=0.1, lr_decay2=1.0, max_epoch=10, name='office-home', name1='PA', name2='PC', name3='PR', net='resnet50', out_file=<_io.TextIOWrapper name='ckpt/target/pda/office-home-addfc+gent/log_par_0.6_thr0.txt' mode='w' encoding='UTF-8'>, output='ckpt/target', output_dir='ckpt/target/pda/office-home-addfc+gent', output_dir_src='ckpt/source/pda/office-home/P', output_src='ckpt/source', s=0, s_dset_path='./data/office-home/Product.txt', savename='par_0.6_thr0', seed=2020, src_classes=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], t=1, t_dset_path='./data/office-home/Art.txt', t_dset_path1='./data/office-home/Clipart.txt', t_dset_path2='./data/office-home/Real_World.txt', tar_classes=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], tar_classes1=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], tar_classes2=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], test_dset_path='./data/office-home/Art.txt', test_dset_path1='./data/office-home/Clipart.txt', test_dset_path2='./data/office-home/Real_World.txt', threshold=0, worker=4)
/homes/jh015/.conda/envs/hj_trans/lib/python3.7/site-packages/torchvision/models/_utils.py:209: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and will be removed in 0.15, please use 'weights' instead.
  f"The parameter '{pretrained_param}' is deprecated since 0.13 and will be removed in 0.15, "
/homes/jh015/.conda/envs/hj_trans/lib/python3.7/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and will be removed in 0.15. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
ent tensor(0.3274) tensor(0.4657) tensor(4.5234, dtype=torch.float64) tensor(9.4315, dtype=torch.float64)
all_output1 tensor([0.0066, 0.0100, 0.0231, 0.0116, 0.0093, 0.0103, 0.0131, 0.0258, 0.0073,
        0.0071, 0.0110, 0.0104, 0.0070, 0.0192, 0.0050, 0.0099, 0.0042, 0.0052,
        0.0130, 0.0227, 0.0030, 0.0213, 0.0092, 0.0146, 0.0082, 0.0105, 0.0074,
        0.0105, 0.0057, 0.0055, 0.0084, 0.0060, 0.0140, 0.0272, 0.0204, 0.0101,
        0.0062, 0.0056, 0.0053, 0.0049, 0.0070, 0.0128, 0.0078, 0.0040, 0.0100,
        0.0046, 0.0057, 0.0098, 0.0116, 0.0099, 0.4810])
cls_count [4.000e+00 1.500e+01 3.300e+01 1.900e+01 6.000e+00 1.500e+01 1.200e+01
 2.700e+01 5.000e+00 1.100e+01 1.200e+01 6.000e+00 9.000e+00 2.100e+01
 4.000e+00 8.000e+00 1.000e+00 3.000e+00 1.400e+01 4.100e+01 1.000e+00
 3.500e+01 1.000e+01 1.200e+01 6.000e+00 8.000e+00 9.000e+00 1.200e+01
 6.000e+00 3.000e+00 9.000e+00 3.000e+00 1.900e+01 5.200e+01 1.800e+01
 1.300e+01 9.000e+00 5.000e+00 5.000e+00 6.000e+00 6.000e+00 1.600e+01
 2.000e+00 5.000e+00 1.100e+01 2.000e+00 6.000e+00 7.000e+00 1.500e+01
 1.500e+01 1.186e+03] 0.0008431703204047217 1778.0 0.009983136593591905 0.6670416197975253
Accuracy = 53.49% -> 59.00%

50
ent tensor(0.3550) tensor(0.5148) tensor(3.8021, dtype=torch.float64) tensor(7.9297, dtype=torch.float64)
all_output1 tensor([0.0077, 0.0299, 0.0181, 0.0260, 0.0133, 0.0145, 0.0120, 0.0165, 0.0043,
        0.0250, 0.0129, 0.0297, 0.0129, 0.0091, 0.0122, 0.0048, 0.0173, 0.0023,
        0.0092, 0.0280, 0.0056, 0.0239, 0.0081, 0.0178, 0.0084, 0.0061, 0.0051,
        0.0068, 0.0091, 0.0033, 0.0032, 0.0091, 0.0019, 0.0050, 0.0038, 0.0095,
        0.0032, 0.0019, 0.0027, 0.0023, 0.0034, 0.0039, 0.0050, 0.0029, 0.0037,
        0.0063, 0.0042, 0.0044, 0.0148, 0.0063, 0.5030])
cls_count [1.000e+01 3.900e+01 2.300e+01 3.500e+01 1.300e+01 1.900e+01 1.200e+01
 1.400e+01 0.000e+00 3.800e+01 1.600e+01 3.800e+01 1.600e+01 8.000e+00
 1.400e+01 1.000e+00 2.700e+01 0.000e+00 1.000e+01 4.900e+01 1.000e+00
 4.000e+01 5.000e+00 1.200e+01 9.000e+00 0.000e+00 0.000e+00 5.000e+00
 4.000e+00 0.000e+00 0.000e+00 6.000e+00 0.000e+00 3.000e+00 0.000e+00
 7.000e+00 0.000e+00 0.000e+00 0.000e+00 0.000e+00 0.000e+00 0.000e+00
 1.000e+00 0.000e+00 1.000e+00 1.000e+00 1.000e+00 1.000e+00 1.900e+01
 6.000e+00 1.253e+03] 0.0 1757.0 0.008044692737430168 0.7131474103585658
Accuracy = 45.87% -> 48.55%

50
ent tensor(0.2916) tensor(0.3777) tensor(5.7183, dtype=torch.float64) tensor(16.4802, dtype=torch.float64)
cls_count [  28.   65.   46.   49.   19.   43.   45.   20.   42.   54.   38.   39.
   68.   61.   24.   44.   33.   11.   33.   86.    5.   48.   33.   33.
   54.   36.   44.   92.   38.   24.   53.   26.   74.   76.   50.   34.
   15.   27.   22.   29.   23.   37.   34.   38.   39.   20.   43.   50.
   68.   68. 2276.] 0.0021968365553602814 4357.0 0.018286467486818978 0.5223777828781271
cls_count [28. 65. 46. 49. 19. 43. 45. 20. 42. 54. 38. 39. 68. 61. 24. 44. 33. 11.
 33. 86.  5. 48. 33. 33. 54. 36. 44. 92. 38. 24. 53. 26. 74. 76. 50. 34.
 15. 27. 22. 29. 23. 37. 34. 38. 39. 20. 43. 50. 68. 68.] 0.0 5.0 92.0 0.05434782608695652
51
acc [54.90196078 77.77777778 46.15384615 76.66666667 18.75       67.24137931
 39.39393939 23.88059701 54.54545455 71.64179104 51.38888889 21.05263158
 85.33333333 63.52941176 27.11864407 49.39759036 55.76923077  8.23529412
 36.84210526 86.86868687  7.46268657 77.5862069  67.34693878 46.77419355
 65.85365854 60.         70.         78.46153846 32.3943662  50.
 57.95454545 25.         73.73737374 82.55813953 43.39622642 45.58823529
 18.75       39.39393939 35.         70.73170732 40.         66.66666667
 35.80246914 73.07692308 45.67901235 44.18604651 45.         46.875
 91.17647059 89.04109589 87.61514841] 51 H_score 65.92233252320291
Task: office-home, Iter:0/690; Accuracy = 53.52% / 52.84% / 87.62%
ent tensor(0.1582) tensor(0.1392) tensor(8.8274, dtype=torch.float64) tensor(13.2902, dtype=torch.float64)
all_output1 tensor([0.0098, 0.0119, 0.0368, 0.0166, 0.0179, 0.0130, 0.0203, 0.0423, 0.0096,
        0.0148, 0.0206, 0.0141, 0.0106, 0.0253, 0.0061, 0.0173, 0.0083, 0.0100,
        0.0178, 0.0365, 0.0048, 0.0240, 0.0150, 0.0153, 0.0167, 0.0290, 0.0106,
        0.0150, 0.0082, 0.0120, 0.0207, 0.0066, 0.0252, 0.0335, 0.0188, 0.0187,
        0.0079, 0.0118, 0.0097, 0.0074, 0.0133, 0.0141, 0.0049, 0.0054, 0.0118,
        0.0084, 0.0104, 0.0182, 0.0134, 0.0146, 0.2154])
cls_count [ 15.  23.  69.  31.  33.  23.  37.  78.  18.  28.  38.  25.  20.  47.
   8.  33.  15.  17.  32.  68.   6.  44.  28.  27.  30.  52.  21.  27.
  14.  20.  38.  11.  43.  61.  32.  33.  15.  23.  17.  13.  25.  27.
   7.   9.  20.  16.  19.  35.  22.  26. 359.] 0.016713091922005572 1778.0 0.07905292479108635 0.20191226096737913
Accuracy = 62.43% -> 62.71%

50
ent tensor(0.1387) tensor(0.1083) tensor(6.5238, dtype=torch.float64) tensor(8.8250, dtype=torch.float64)
all_output1 tensor([0.0112, 0.0494, 0.0335, 0.0305, 0.0265, 0.0228, 0.0224, 0.0269, 0.0021,
        0.0389, 0.0147, 0.0458, 0.0146, 0.0268, 0.0251, 0.0124, 0.0348, 0.0134,
        0.0221, 0.0430, 0.0178, 0.0352, 0.0173, 0.0179, 0.0095, 0.0134, 0.0106,
        0.0200, 0.0182, 0.0057, 0.0066, 0.0146, 0.0052, 0.0079, 0.0062, 0.0256,
        0.0060, 0.0014, 0.0040, 0.0038, 0.0090, 0.0021, 0.0055, 0.0066, 0.0100,
        0.0059, 0.0034, 0.0107, 0.0266, 0.0168, 0.1396])
cls_count [ 20.  90.  62.  53.  49.  41.  41.  46.   3.  74.  27.  83.  26.  50.
  46.  22.  66.  23.  41.  80.  33.  65.  32.  34.  18.  24.  18.  35.
  31.  10.  12.  27.   8.  14.   9.  46.  10.   2.   7.   5.  15.   3.
  10.  11.  19.   8.   5.  18.  51.  32. 202.] 0.009900990099009901 1757.0 0.15396039603960396 0.11496869664200338
Accuracy = 49.86% -> 49.69%

50
ent tensor(0.1699) tensor(0.3139) tensor(8.7823, dtype=torch.float64) tensor(23.7359, dtype=torch.float64)
cls_count [  31.   75.   48.   53.   17.   50.   51.   25.   43.   65.   48.   40.
   73.   73.   29.   57.   42.   15.   45.   95.    8.   56.   41.   30.
   57.   37.   49.   97.   47.   37.   67.   30.   85.   75.   41.   42.
   18.   31.   31.   37.   31.   36.   36.   42.   59.   28.   46.   65.
   74.   72. 1977.] 0.004046535154274153 4357.0 0.02407688416793121 0.4537525820518705
cls_count [31. 75. 48. 53. 17. 50. 51. 25. 43. 65. 48. 40. 73. 73. 29. 57. 42. 15.
 45. 95.  8. 56. 41. 30. 57. 37. 49. 97. 47. 37. 67. 30. 85. 75. 41. 42.
 18. 31. 31. 37. 31. 36. 36. 42. 59. 28. 46. 65. 74. 72.] 0.0 8.0 97.0 0.08247422680412371
51
acc [58.82352941 83.95061728 51.28205128 85.         17.1875     72.4137931
 46.96969697 31.34328358 55.84415584 82.08955224 65.27777778 29.8245614
 86.66666667 81.17647059 28.81355932 61.44578313 71.15384615 14.11764706
 47.36842105 95.95959596 10.44776119 89.65517241 75.51020408 45.16129032
 69.51219512 60.         78.33333333 84.61538462 40.84507042 69.56521739
 75.         33.82352941 81.81818182 83.72093023 54.71698113 55.88235294
 26.5625     45.45454545 48.33333333 82.92682927 60.         66.66666667
 38.27160494 80.76923077 64.19753086 51.1627907  50.         58.33333333
 94.11764706 90.4109589  89.76458547] 51 H_score 72.38987926955245
Task: office-home, Iter:69/690; Accuracy = 61.22% / 60.65% / 89.76%
ent tensor(0.1014) tensor(0.0678) tensor(5.4294, dtype=torch.float64) tensor(6.5715, dtype=torch.float64)
all_output1 tensor([0.0123, 0.0128, 0.0392, 0.0177, 0.0224, 0.0132, 0.0222, 0.0420, 0.0136,
        0.0193, 0.0221, 0.0188, 0.0128, 0.0275, 0.0088, 0.0204, 0.0116, 0.0107,
        0.0206, 0.0375, 0.0064, 0.0249, 0.0165, 0.0208, 0.0177, 0.0327, 0.0127,
        0.0186, 0.0098, 0.0107, 0.0212, 0.0069, 0.0281, 0.0367, 0.0209, 0.0231,
        0.0094, 0.0148, 0.0103, 0.0073, 0.0141, 0.0154, 0.0061, 0.0077, 0.0128,
        0.0095, 0.0134, 0.0233, 0.0143, 0.0168, 0.1113])
cls_count [ 22.  25.  74.  34.  42.  23.  41.  80.  24.  35.  42.  34.  23.  50.
  16.  37.  22.  21.  39.  69.  14.  48.  30.  42.  32.  58.  22.  35.
  18.  19.  39.  12.  53.  67.  40.  43.  18.  27.  17.  13.  27.  29.
  10.  14.  23.  16.  25.  41.  27.  32. 134.] 0.07462686567164178 1778.0 0.24537313432835822 0.07536557930258714
Accuracy = 63.05% -> 63.10%

50
ent tensor(0.0737) tensor(0.0493) tensor(2.4675, dtype=torch.float64) tensor(2.6512, dtype=torch.float64)
all_output1 tensor([0.0130, 0.0527, 0.0354, 0.0312, 0.0286, 0.0241, 0.0240, 0.0264, 0.0036,
        0.0424, 0.0162, 0.0465, 0.0152, 0.0265, 0.0282, 0.0143, 0.0379, 0.0127,
        0.0270, 0.0433, 0.0196, 0.0367, 0.0182, 0.0216, 0.0101, 0.0144, 0.0131,
        0.0198, 0.0223, 0.0052, 0.0077, 0.0216, 0.0061, 0.0088, 0.0090, 0.0281,
        0.0076, 0.0018, 0.0034, 0.0096, 0.0099, 0.0031, 0.0058, 0.0095, 0.0130,
        0.0072, 0.0051, 0.0134, 0.0294, 0.0188, 0.0508])
cls_count [23. 96. 64. 56. 50. 42. 42. 49.  6. 75. 29. 83. 26. 49. 53. 25. 68. 24.
 49. 79. 37. 66. 32. 40. 18. 25. 24. 34. 43. 11. 14. 39. 11. 15. 17. 49.
 14.  3.  6. 15. 17.  6. 10. 17. 23. 12.  9. 25. 54. 34. 49.] 0.061224489795918366 1757.0 0.6971428571428571 0.027888446215139417
Accuracy = 49.57% -> 49.52%

50
ent tensor(0.1313) tensor(0.3044) tensor(9.3687, dtype=torch.float64) tensor(24.9401, dtype=torch.float64)
cls_count [  33.   76.   52.   54.   34.   54.   56.   23.   50.   74.   49.   50.
   78.   80.   28.   56.   45.   11.   60.   97.   10.   57.   44.   34.
   60.   49.   51.  103.   52.   37.   67.   33.   88.   78.   41.   46.
   21.   39.   32.   37.   34.   37.   45.   51.   72.   28.   50.   81.
   77.   76. 1767.] 0.005659309564233163 4357.0 0.029315223542727784 0.40555428046821207
cls_count [ 33.  76.  52.  54.  34.  54.  56.  23.  50.  74.  49.  50.  78.  80.
  28.  56.  45.  11.  60.  97.  10.  57.  44.  34.  60.  49.  51. 103.
  52.  37.  67.  33.  88.  78.  41.  46.  21.  39.  32.  37.  34.  37.
  45.  51.  72.  28.  50.  81.  77.  76.] 0.0 10.0 103.0 0.0970873786407767
51
acc [62.74509804 85.18518519 55.12820513 88.33333333 31.25       74.13793103
 50.         28.35820896 64.93506494 88.05970149 65.27777778 40.35087719
 89.33333333 85.88235294 30.50847458 60.24096386 75.         10.58823529
 63.15789474 97.97979798 11.94029851 89.65517241 79.59183673 48.38709677
 71.95121951 73.33333333 81.66666667 87.69230769 46.47887324 73.91304348
 76.13636364 30.88235294 85.85858586 87.20930233 56.60377358 58.82352941
 29.6875     51.51515152 48.33333333 82.92682927 63.33333333 66.66666667
 48.14814815 88.46153846 72.83950617 48.8372093  52.5        70.83333333
 94.11764706 91.78082192 88.9457523 ] 51 H_score 74.66202863385294
Task: office-home, Iter:138/690; Accuracy = 64.81% / 64.33% / 88.95%
ent tensor(0.0657) tensor(0.0408) tensor(1.7406, dtype=torch.float64) tensor(1.8098, dtype=torch.float64)
all_output1 tensor([0.0134, 0.0140, 0.0416, 0.0193, 0.0230, 0.0130, 0.0249, 0.0467, 0.0137,
        0.0201, 0.0235, 0.0186, 0.0124, 0.0287, 0.0106, 0.0235, 0.0133, 0.0141,
        0.0228, 0.0382, 0.0082, 0.0274, 0.0172, 0.0234, 0.0178, 0.0340, 0.0135,
        0.0190, 0.0118, 0.0132, 0.0230, 0.0074, 0.0315, 0.0371, 0.0213, 0.0230,
        0.0102, 0.0150, 0.0119, 0.0074, 0.0148, 0.0168, 0.0063, 0.0077, 0.0128,
        0.0117, 0.0150, 0.0253, 0.0150, 0.0174, 0.0486])
cls_count [25. 27. 77. 35. 42. 23. 45. 86. 24. 36. 43. 36. 22. 51. 21. 43. 24. 27.
 42. 69. 16. 50. 33. 42. 32. 61. 26. 35. 22. 24. 43. 13. 58. 67. 42. 42.
 18. 27. 22. 13. 27. 30. 11. 14. 23. 21. 29. 46. 28. 32. 33.] 0.3333333333333333 1778.0 1.0575757575757576 0.01856017997750281
Accuracy = 63.33% -> 63.22%

50
ent tensor(0.0451) tensor(0.0294) tensor(0.3694, dtype=torch.float64) tensor(0.3524, dtype=torch.float64)
all_output1 tensor([0.0129, 0.0545, 0.0374, 0.0312, 0.0279, 0.0242, 0.0227, 0.0289, 0.0054,
        0.0427, 0.0168, 0.0444, 0.0147, 0.0272, 0.0290, 0.0147, 0.0379, 0.0146,
        0.0281, 0.0441, 0.0214, 0.0378, 0.0180, 0.0234, 0.0102, 0.0146, 0.0154,
        0.0207, 0.0240, 0.0065, 0.0085, 0.0221, 0.0062, 0.0087, 0.0105, 0.0274,
        0.0085, 0.0018, 0.0035, 0.0122, 0.0104, 0.0031, 0.0058, 0.0095, 0.0132,
        0.0082, 0.0051, 0.0146, 0.0296, 0.0196, 0.0202])
cls_count [23. 99. 68. 55. 50. 43. 41. 52.  9. 75. 31. 80. 26. 49. 53. 26. 69. 28.
 50. 79. 39. 67. 32. 40. 18. 25. 28. 37. 44. 11. 15. 40. 11. 15. 19. 48.
 15.  3.  6. 21. 18.  6. 10. 17. 23. 14.  9. 25. 54. 35.  6.] 0.5 1757.0 5.836666666666667 0.0034149117814455954
Accuracy = 49.40% -> 49.52%

50
ent tensor(0.1198) tensor(0.2977) tensor(9.2626, dtype=torch.float64) tensor(23.7947, dtype=torch.float64)
cls_count [  32.   78.   53.   56.   38.   55.   62.   29.   53.   73.   52.   51.
   79.   87.   29.   66.   50.   14.   70.   98.   11.   62.   46.   41.
   60.   55.   52.  107.   54.   40.   75.   42.   95.   78.   41.   47.
   30.   42.   33.   38.   36.   39.   49.   52.   80.   33.   52.   88.
   77.   81. 1596.] 0.006892230576441102 4357.0 0.03459899749373434 0.36630709203580447
cls_count [ 32.  78.  53.  56.  38.  55.  62.  29.  53.  73.  52.  51.  79.  87.
  29.  66.  50.  14.  70.  98.  11.  62.  46.  41.  60.  55.  52. 107.
  54.  40.  75.  42.  95.  78.  41.  47.  30.  42.  33.  38.  36.  39.
  49.  52.  80.  33.  52.  88.  77.  81.] 0.0 11.0 107.0 0.102803738317757
51
acc [62.74509804 86.41975309 56.41025641 88.33333333 35.9375     74.13793103
 54.54545455 32.8358209  64.93506494 88.05970149 69.44444444 40.35087719
 89.33333333 92.94117647 30.50847458 65.06024096 80.76923077 14.11764706
 71.05263158 98.98989899 13.43283582 93.10344828 81.63265306 51.61290323
 71.95121951 85.         83.33333333 89.23076923 47.88732394 76.08695652
 84.09090909 38.23529412 91.91919192 87.20930233 58.49056604 60.29411765
 42.1875     54.54545455 51.66666667 85.36585366 66.66666667 70.58823529
 51.85185185 90.38461538 79.01234568 53.48837209 53.75       73.95833333
 94.11764706 93.15068493 87.92221085] 51 H_score 76.32037062460445
Task: office-home, Iter:207/690; Accuracy = 67.83% / 67.42% / 87.92%
ent tensor(0.0613) tensor(0.0302) tensor(2.7492, dtype=torch.float64) tensor(2.9369, dtype=torch.float64)
all_output1 tensor([0.0138, 0.0131, 0.0406, 0.0190, 0.0220, 0.0132, 0.0248, 0.0469, 0.0137,
        0.0204, 0.0236, 0.0175, 0.0122, 0.0282, 0.0090, 0.0235, 0.0132, 0.0147,
        0.0233, 0.0378, 0.0082, 0.0265, 0.0174, 0.0233, 0.0174, 0.0333, 0.0145,
        0.0197, 0.0124, 0.0120, 0.0227, 0.0069, 0.0302, 0.0361, 0.0212, 0.0229,
        0.0099, 0.0143, 0.0120, 0.0074, 0.0148, 0.0168, 0.0063, 0.0079, 0.0126,
        0.0106, 0.0143, 0.0240, 0.0153, 0.0168, 0.0618])
cls_count [26. 24. 77. 35. 42. 23. 45. 86. 24. 36. 43. 30. 22. 51. 17. 41. 26. 29.
 42. 69. 16. 50. 32. 43. 32. 60. 27. 36. 23. 22. 42. 13. 56. 67. 39. 42.
 18. 26. 22. 13. 27. 30. 11. 15. 23. 18. 29. 44. 28. 32. 54.] 0.2037037037037037 1778.0 0.6385185185185185 0.030371203599550034
Accuracy = 63.33% -> 63.27%

50
ent tensor(0.0431) tensor(0.0223) tensor(0.3659, dtype=torch.float64) tensor(0.3498, dtype=torch.float64)
all_output1 tensor([0.0131, 0.0523, 0.0370, 0.0308, 0.0277, 0.0243, 0.0229, 0.0290, 0.0056,
        0.0428, 0.0173, 0.0426, 0.0146, 0.0264, 0.0284, 0.0147, 0.0385, 0.0140,
        0.0283, 0.0434, 0.0208, 0.0366, 0.0181, 0.0230, 0.0102, 0.0141, 0.0162,
        0.0207, 0.0243, 0.0061, 0.0083, 0.0226, 0.0062, 0.0086, 0.0109, 0.0273,
        0.0084, 0.0017, 0.0034, 0.0126, 0.0106, 0.0032, 0.0061, 0.0094, 0.0131,
        0.0085, 0.0052, 0.0140, 0.0299, 0.0193, 0.0269])
cls_count [23. 98. 68. 55. 50. 43. 41. 52. 10. 75. 31. 78. 26. 49. 54. 26. 69. 27.
 50. 79. 39. 66. 32. 40. 18. 25. 28. 36. 44. 11. 15. 40. 11. 15. 20. 48.
 15.  3.  6. 22. 19.  6. 10. 17. 23. 15.  9. 25. 54. 35.  6.] 0.5 1757.0 5.836666666666667 0.0034149117814455954
Accuracy = 49.46% -> 49.40%

50
ent tensor(0.0801) tensor(0.2957) tensor(10.4599, dtype=torch.float64) tensor(28.0228, dtype=torch.float64)
cls_count [  32.   76.   50.   55.   38.   53.   58.   30.   53.   74.   52.   51.
   79.   86.   27.   66.   50.   12.   71.   98.   11.   61.   46.   39.
   61.   52.   53.  106.   55.   39.   75.   43.   91.   76.   41.   47.
   29.   41.   33.   38.   36.   39.   49.   51.   78.   32.   52.   86.
   76.   78. 1632.] 0.006740196078431373 4357.0 0.033394607843137254 0.3745696580215745
cls_count [ 32.  76.  50.  55.  38.  53.  58.  30.  53.  74.  52.  51.  79.  86.
  27.  66.  50.  12.  71.  98.  11.  61.  46.  39.  61.  52.  53. 106.
  55.  39.  75.  43.  91.  76.  41.  47.  29.  41.  33.  38.  36.  39.
  49.  51.  78.  32.  52.  86.  76.  78.] 0.0 11.0 106.0 0.10377358490566038
51
acc [62.74509804 85.18518519 53.84615385 88.33333333 37.5        74.13793103
 51.51515152 34.32835821 64.93506494 89.55223881 69.44444444 40.35087719
 89.33333333 91.76470588 30.50847458 65.06024096 82.69230769 11.76470588
 72.36842105 98.98989899 13.43283582 93.10344828 81.63265306 50.
 73.17073171 80.         83.33333333 89.23076923 47.88732394 76.08695652
 85.22727273 38.23529412 87.87878788 84.88372093 58.49056604 60.29411765
 40.625      53.03030303 51.66666667 85.36585366 66.66666667 70.58823529
 51.85185185 90.38461538 79.01234568 51.1627907  55.         72.91666667
 94.11764706 93.15068493 88.12691914] 51 H_score 76.16072400972115
Task: office-home, Iter:276/690; Accuracy = 67.47% / 67.06% / 88.13%
ent tensor(0.0627) tensor(0.0256) tensor(2.4771, dtype=torch.float64) tensor(2.6320, dtype=torch.float64)
all_output1 tensor([0.0127, 0.0140, 0.0404, 0.0188, 0.0219, 0.0129, 0.0246, 0.0480, 0.0133,
        0.0198, 0.0235, 0.0170, 0.0121, 0.0284, 0.0094, 0.0228, 0.0134, 0.0140,
        0.0226, 0.0375, 0.0081, 0.0261, 0.0169, 0.0225, 0.0176, 0.0317, 0.0137,
        0.0185, 0.0120, 0.0119, 0.0227, 0.0070, 0.0305, 0.0364, 0.0215, 0.0229,
        0.0099, 0.0140, 0.0113, 0.0073, 0.0144, 0.0163, 0.0060, 0.0078, 0.0122,
        0.0108, 0.0152, 0.0237, 0.0154, 0.0170, 0.0718])
cls_count [25. 25. 77. 35. 41. 23. 45. 89. 24. 36. 43. 31. 22. 51. 18. 44. 26. 29.
 42. 69. 16. 50. 31. 42. 32. 60. 26. 35. 23. 24. 41. 13. 57. 67. 41. 42.
 18. 26. 21. 13. 27. 30. 11. 15. 23. 20. 28. 43. 28. 32. 48.] 0.22916666666666666 1778.0 0.7208333333333333 0.02699662542182224
Accuracy = 63.27% -> 63.22%

50
ent tensor(0.0382) tensor(0.0174) tensor(0.3050, dtype=torch.float64) tensor(0.2909, dtype=torch.float64)
all_output1 tensor([0.0129, 0.0546, 0.0374, 0.0304, 0.0271, 0.0242, 0.0229, 0.0293, 0.0054,
        0.0425, 0.0173, 0.0433, 0.0142, 0.0271, 0.0296, 0.0146, 0.0386, 0.0128,
        0.0281, 0.0436, 0.0216, 0.0368, 0.0181, 0.0226, 0.0102, 0.0137, 0.0158,
        0.0201, 0.0247, 0.0061, 0.0080, 0.0220, 0.0063, 0.0086, 0.0108, 0.0276,
        0.0086, 0.0017, 0.0033, 0.0123, 0.0109, 0.0031, 0.0058, 0.0092, 0.0128,
        0.0084, 0.0052, 0.0141, 0.0302, 0.0194, 0.0261])
cls_count [23. 99. 68. 55. 50. 43. 41. 52. 10. 75. 31. 78. 25. 49. 54. 26. 69. 25.
 50. 79. 39. 66. 32. 40. 18. 25. 29. 36. 44. 11. 15. 40. 11. 15. 20. 49.
 15.  3.  6. 22. 20.  6. 10. 16. 23. 15.  9. 25. 55. 35.  5.] 0.6 1757.0 7.008 0.002845759817871385
Accuracy = 49.35% -> 49.40%

50
ent tensor(0.0605) tensor(0.3047) tensor(10.7166, dtype=torch.float64) tensor(30.3053, dtype=torch.float64)
cls_count [  32.   77.   49.   55.   37.   53.   57.   30.   52.   74.   52.   51.
   79.   86.   27.   64.   50.   12.   68.   98.   11.   60.   46.   40.
   61.   51.   53.  104.   55.   39.   75.   41.   92.   76.   41.   46.
   31.   40.   33.   38.   36.   38.   49.   52.   77.   32.   52.   85.
   76.   79. 1645.] 0.006686930091185411 4357.0 0.032972644376899694 0.3775533624053248
cls_count [ 32.  77.  49.  55.  37.  53.  57.  30.  52.  74.  52.  51.  79.  86.
  27.  64.  50.  12.  68.  98.  11.  60.  46.  40.  61.  51.  53. 104.
  55.  39.  75.  41.  92.  76.  41.  46.  31.  40.  33.  38.  36.  38.
  49.  52.  77.  32.  52.  85.  76.  79.] 0.0 11.0 104.0 0.10576923076923077
51
acc [62.74509804 85.18518519 52.56410256 88.33333333 37.5        74.13793103
 51.51515152 34.32835821 64.93506494 89.55223881 69.44444444 40.35087719
 89.33333333 91.76470588 30.50847458 62.65060241 82.69230769 11.76470588
 69.73684211 98.98989899 13.43283582 93.10344828 81.63265306 50.
 73.17073171 78.33333333 83.33333333 89.23076923 47.88732394 76.08695652
 85.22727273 36.76470588 88.88888889 84.88372093 58.49056604 58.82352941
 40.625      53.03030303 51.66666667 85.36585366 66.66666667 68.62745098
 51.85185185 90.38461538 79.01234568 51.1627907  55.         71.875
 94.11764706 93.15068493 88.33162743] 51 H_score 76.06974256200662
Task: office-home, Iter:345/690; Accuracy = 67.22% / 66.80% / 88.33%
ent tensor(0.0534) tensor(0.0250) tensor(1.1661, dtype=torch.float64) tensor(1.1762, dtype=torch.float64)
all_output1 tensor([0.0130, 0.0140, 0.0420, 0.0195, 0.0223, 0.0133, 0.0254, 0.0484, 0.0134,
        0.0199, 0.0236, 0.0185, 0.0119, 0.0282, 0.0098, 0.0240, 0.0141, 0.0151,
        0.0233, 0.0380, 0.0085, 0.0272, 0.0175, 0.0236, 0.0178, 0.0331, 0.0144,
        0.0191, 0.0126, 0.0122, 0.0226, 0.0072, 0.0311, 0.0368, 0.0227, 0.0231,
        0.0100, 0.0147, 0.0121, 0.0073, 0.0149, 0.0170, 0.0062, 0.0080, 0.0126,
        0.0109, 0.0161, 0.0241, 0.0162, 0.0168, 0.0459])
cls_count [25. 26. 77. 35. 42. 24. 47. 89. 24. 36. 43. 34. 22. 51. 20. 45. 26. 29.
 43. 69. 16. 50. 32. 44. 32. 61. 27. 36. 24. 24. 42. 13. 57. 67. 42. 42.
 18. 27. 22. 13. 27. 30. 11. 15. 23. 21. 29. 44. 30. 31. 21.] 0.5238095238095238 1778.0 1.6733333333333333 0.011811023622047223
Accuracy = 63.27% -> 63.22%

50
ent tensor(0.0342) tensor(0.0178) tensor(0.0659, dtype=torch.float64) tensor(0.0599, dtype=torch.float64)
all_output1 tensor([0.0127, 0.0546, 0.0380, 0.0310, 0.0278, 0.0243, 0.0229, 0.0287, 0.0056,
        0.0425, 0.0175, 0.0436, 0.0139, 0.0269, 0.0294, 0.0148, 0.0387, 0.0135,
        0.0282, 0.0442, 0.0217, 0.0372, 0.0181, 0.0229, 0.0101, 0.0139, 0.0162,
        0.0203, 0.0249, 0.0063, 0.0083, 0.0226, 0.0063, 0.0086, 0.0109, 0.0277,
        0.0085, 0.0018, 0.0034, 0.0123, 0.0112, 0.0034, 0.0059, 0.0094, 0.0129,
        0.0085, 0.0052, 0.0141, 0.0309, 0.0194, 0.0179])
cls_count [23. 99. 68. 55. 50. 43. 41. 52. 10. 75. 31. 78. 25. 49. 54. 26. 69. 25.
 50. 79. 39. 67. 32. 41. 18. 25. 29. 36. 44. 11. 15. 40. 11. 15. 20. 49.
 15.  3.  6. 22. 20.  6. 10. 17. 23. 15.  9. 25. 55. 36.  1.] 3.0 1757.0 35.12 0.0005691519635743214
Accuracy = 49.35% -> 49.40%

50
ent tensor(0.0595) tensor(0.3182) tensor(10.2209, dtype=torch.float64) tensor(30.2475, dtype=torch.float64)
cls_count [  32.   77.   49.   55.   35.   53.   57.   30.   52.   75.   52.   51.
   79.   86.   27.   66.   50.   12.   70.   98.   11.   61.   46.   40.
   61.   52.   53.  104.   55.   39.   75.   42.   92.   76.   41.   46.
   31.   41.   33.   38.   36.   38.   49.   52.   79.   32.   53.   85.
   76.   79. 1635.] 0.00672782874617737 4357.0 0.03329663608562691 0.3752582051870553
cls_count [ 32.  77.  49.  55.  35.  53.  57.  30.  52.  75.  52.  51.  79.  86.
  27.  66.  50.  12.  70.  98.  11.  61.  46.  40.  61.  52.  53. 104.
  55.  39.  75.  42.  92.  76.  41.  46.  31.  41.  33.  38.  36.  38.
  49.  52.  79.  32.  53.  85.  76.  79.] 0.0 11.0 104.0 0.10576923076923077
51
acc [62.74509804 85.18518519 52.56410256 88.33333333 34.375      74.13793103
 51.51515152 34.32835821 64.93506494 89.55223881 69.44444444 40.35087719
 89.33333333 91.76470588 30.50847458 65.06024096 82.69230769 11.76470588
 72.36842105 98.98989899 13.43283582 93.10344828 81.63265306 50.
 73.17073171 80.         83.33333333 89.23076923 47.88732394 76.08695652
 85.22727273 36.76470588 88.88888889 84.88372093 58.49056604 58.82352941
 40.625      53.03030303 51.66666667 85.36585366 66.66666667 68.62745098
 51.85185185 90.38461538 79.01234568 51.1627907  55.         71.875
 94.11764706 93.15068493 88.12691914] 51 H_score 76.04008490837668
Task: office-home, Iter:414/690; Accuracy = 67.29% / 66.87% / 88.13%
ent tensor(0.0535) tensor(0.0245) tensor(1.0114, dtype=torch.float64) tensor(1.0121, dtype=torch.float64)
all_output1 tensor([0.0134, 0.0141, 0.0418, 0.0194, 0.0230, 0.0134, 0.0254, 0.0490, 0.0134,
        0.0199, 0.0233, 0.0188, 0.0122, 0.0279, 0.0113, 0.0240, 0.0139, 0.0154,
        0.0237, 0.0373, 0.0084, 0.0277, 0.0175, 0.0232, 0.0176, 0.0342, 0.0145,
        0.0196, 0.0128, 0.0121, 0.0225, 0.0072, 0.0311, 0.0365, 0.0224, 0.0230,
        0.0101, 0.0145, 0.0119, 0.0075, 0.0149, 0.0167, 0.0062, 0.0082, 0.0126,
        0.0105, 0.0155, 0.0240, 0.0155, 0.0170, 0.0440])
cls_count [25. 27. 77. 35. 42. 24. 46. 89. 24. 36. 43. 36. 22. 51. 21. 45. 25. 30.
 43. 69. 16. 50. 32. 44. 32. 62. 27. 36. 24. 24. 41. 13. 58. 67. 43. 42.
 18. 27. 22. 13. 27. 31. 11. 15. 22. 20. 29. 44. 29. 31. 18.] 0.6111111111111112 1778.0 1.9555555555555557 0.010123734533183382
Accuracy = 63.22% -> 63.22%

50
ent tensor(0.0350) tensor(0.0180) tensor(0., dtype=torch.float64) tensor(0., dtype=torch.float64)
all_output1 tensor([0.0128, 0.0543, 0.0380, 0.0307, 0.0281, 0.0243, 0.0229, 0.0292, 0.0057,
        0.0424, 0.0175, 0.0438, 0.0145, 0.0272, 0.0305, 0.0148, 0.0387, 0.0131,
        0.0283, 0.0436, 0.0214, 0.0377, 0.0181, 0.0229, 0.0102, 0.0141, 0.0162,
        0.0203, 0.0247, 0.0062, 0.0083, 0.0221, 0.0063, 0.0085, 0.0109, 0.0277,
        0.0085, 0.0017, 0.0033, 0.0124, 0.0112, 0.0033, 0.0058, 0.0094, 0.0129,
        0.0084, 0.0052, 0.0140, 0.0301, 0.0197, 0.0177])
cls_count [23. 99. 68. 55. 50. 43. 41. 52. 10. 75. 31. 78. 26. 49. 54. 26. 69. 25.
 50. 79. 39. 67. 32. 42. 18. 25. 29. 36. 44. 11. 15. 40. 11. 15. 20. 49.
 15.  3.  6. 22. 20.  6. 10. 17. 23. 15.  9. 25. 54. 36.  0.] inf 1757.0 inf 0.0
Accuracy = 49.40% -> 49.40%

50
image_pretrained-fc_copy2.py:627: RuntimeWarning: divide by zero encountered in double_scalars
  print("cls_count", cls_count, min(cls_count[:-1]) / (cls_count[-1]), np.sum(cls_count),
image_pretrained-fc_copy2.py:628: RuntimeWarning: divide by zero encountered in double_scalars
  np.mean(cls_count[:-1]) / cls_count[-1], 1 - np.sum(cls_count[:-1])/np.sum(cls_count))
ent tensor(0.0520) tensor(0.3261) tensor(10.1174, dtype=torch.float64) tensor(31.0088, dtype=torch.float64)
cls_count [  32.   77.   48.   55.   37.   53.   57.   29.   52.   74.   52.   51.
   79.   86.   27.   66.   50.   12.   71.   98.   11.   62.   46.   40.
   61.   53.   53.  104.   55.   39.   75.   43.   92.   76.   41.   47.
   31.   41.   33.   38.   36.   38.   48.   52.   79.   32.   53.   86.
   76.   79. 1631.] 0.00674432863274065 4357.0 0.03342734518700184 0.37434014229974755
cls_count [ 32.  77.  48.  55.  37.  53.  57.  29.  52.  74.  52.  51.  79.  86.
  27.  66.  50.  12.  71.  98.  11.  62.  46.  40.  61.  53.  53. 104.
  55.  39.  75.  43.  92.  76.  41.  47.  31.  41.  33.  38.  36.  38.
  48.  52.  79.  32.  53.  86.  76.  79.] 0.0 11.0 104.0 0.10576923076923077
51
acc [62.74509804 85.18518519 51.28205128 88.33333333 35.9375     74.13793103
 51.51515152 32.8358209  64.93506494 89.55223881 69.44444444 40.35087719
 89.33333333 91.76470588 30.50847458 65.06024096 82.69230769 11.76470588
 72.36842105 98.98989899 13.43283582 93.10344828 81.63265306 50.
 73.17073171 81.66666667 83.33333333 89.23076923 47.88732394 76.08695652
 85.22727273 38.23529412 88.88888889 84.88372093 58.49056604 60.29411765
 40.625      53.03030303 51.66666667 85.36585366 66.66666667 68.62745098
 51.85185185 90.38461538 79.01234568 51.1627907  55.         72.91666667
 94.11764706 93.15068493 88.12691914] 51 H_score 76.09743307470258
Task: office-home, Iter:483/690; Accuracy = 67.37% / 66.96% / 88.13%
ent tensor(0.0572) tensor(0.0248) tensor(0.9076, dtype=torch.float64) tensor(0.9022, dtype=torch.float64)
all_output1 tensor([0.0135, 0.0133, 0.0424, 0.0199, 0.0226, 0.0130, 0.0256, 0.0475, 0.0134,
        0.0197, 0.0235, 0.0185, 0.0119, 0.0282, 0.0111, 0.0235, 0.0148, 0.0161,
        0.0231, 0.0366, 0.0082, 0.0269, 0.0174, 0.0240, 0.0177, 0.0337, 0.0145,
        0.0196, 0.0127, 0.0123, 0.0220, 0.0074, 0.0305, 0.0360, 0.0231, 0.0228,
        0.0101, 0.0142, 0.0122, 0.0074, 0.0150, 0.0172, 0.0062, 0.0084, 0.0122,
        0.0112, 0.0158, 0.0236, 0.0151, 0.0170, 0.0475])
cls_count [25. 25. 77. 36. 42. 24. 47. 89. 24. 36. 43. 35. 22. 51. 21. 43. 27. 30.
 43. 69. 16. 50. 32. 44. 32. 62. 27. 36. 24. 24. 41. 13. 58. 67. 43. 42.
 18. 27. 22. 13. 27. 31. 11. 15. 22. 22. 30. 44. 29. 31. 16.] 0.6875 1778.0 2.2025 0.008998875140607376
Accuracy = 63.22% -> 63.22%

50
ent tensor(0.0411) tensor(0.0195) tensor(0., dtype=torch.float64) tensor(0., dtype=torch.float64)
all_output1 tensor([0.0130, 0.0535, 0.0381, 0.0312, 0.0279, 0.0237, 0.0229, 0.0287, 0.0056,
        0.0422, 0.0175, 0.0433, 0.0142, 0.0273, 0.0303, 0.0147, 0.0389, 0.0139,
        0.0280, 0.0432, 0.0213, 0.0366, 0.0181, 0.0234, 0.0102, 0.0138, 0.0163,
        0.0202, 0.0248, 0.0063, 0.0082, 0.0224, 0.0063, 0.0086, 0.0109, 0.0273,
        0.0083, 0.0017, 0.0032, 0.0119, 0.0114, 0.0034, 0.0058, 0.0096, 0.0128,
        0.0081, 0.0051, 0.0139, 0.0295, 0.0197, 0.0227])
cls_count [23. 99. 68. 55. 50. 43. 41. 52. 10. 75. 31. 78. 26. 49. 54. 26. 69. 25.
 50. 79. 39. 67. 32. 42. 18. 25. 29. 36. 44. 11. 15. 40. 11. 15. 20. 49.
 15.  3.  6. 22. 20.  6. 10. 17. 23. 15.  9. 25. 54. 36.  0.] inf 1757.0 inf 0.0
Accuracy = 49.40% -> 49.40%

50
image_pretrained-fc_copy2.py:627: RuntimeWarning: divide by zero encountered in double_scalars
  print("cls_count", cls_count, min(cls_count[:-1]) / (cls_count[-1]), np.sum(cls_count),
image_pretrained-fc_copy2.py:628: RuntimeWarning: divide by zero encountered in double_scalars
  np.mean(cls_count[:-1]) / cls_count[-1], 1 - np.sum(cls_count[:-1])/np.sum(cls_count))
ent tensor(0.0455) tensor(0.3324) tensor(10.0741, dtype=torch.float64) tensor(31.8180, dtype=torch.float64)
cls_count [  32.   77.   48.   55.   35.   53.   57.   29.   52.   74.   52.   51.
   79.   86.   27.   66.   50.   12.   70.   98.   11.   62.   46.   40.
   61.   53.   53.  104.   55.   39.   75.   43.   92.   76.   41.   47.
   31.   41.   33.   38.   36.   38.   48.   52.   79.   32.   52.   86.
   76.   79. 1635.] 0.00672782874617737 4357.0 0.03329663608562691 0.3752582051870553
cls_count [ 32.  77.  48.  55.  35.  53.  57.  29.  52.  74.  52.  51.  79.  86.
  27.  66.  50.  12.  70.  98.  11.  62.  46.  40.  61.  53.  53. 104.
  55.  39.  75.  43.  92.  76.  41.  47.  31.  41.  33.  38.  36.  38.
  48.  52.  79.  32.  52.  86.  76.  79.] 0.0 11.0 104.0 0.10576923076923077
51
acc [62.74509804 85.18518519 51.28205128 88.33333333 34.375      74.13793103
 51.51515152 32.8358209  64.93506494 89.55223881 69.44444444 40.35087719
 89.33333333 91.76470588 30.50847458 65.06024096 82.69230769 11.76470588
 72.36842105 98.98989899 13.43283582 93.10344828 81.63265306 50.
 73.17073171 81.66666667 83.33333333 89.23076923 47.88732394 76.08695652
 85.22727273 38.23529412 88.88888889 84.88372093 58.49056604 60.29411765
 40.625      53.03030303 51.66666667 85.36585366 66.66666667 68.62745098
 51.85185185 90.38461538 79.01234568 51.1627907  55.         72.91666667
 94.11764706 93.15068493 88.33162743] 51 H_score 76.15342435963186
Task: office-home, Iter:552/690; Accuracy = 67.35% / 66.93% / 88.33%
ent tensor(0.0621) tensor(0.0270) tensor(0.7514, dtype=torch.float64) tensor(0.7374, dtype=torch.float64)
all_output1 tensor([0.0129, 0.0140, 0.0418, 0.0198, 0.0228, 0.0130, 0.0254, 0.0466, 0.0135,
        0.0197, 0.0231, 0.0182, 0.0116, 0.0281, 0.0112, 0.0240, 0.0144, 0.0164,
        0.0235, 0.0370, 0.0084, 0.0269, 0.0174, 0.0233, 0.0173, 0.0331, 0.0143,
        0.0194, 0.0125, 0.0124, 0.0217, 0.0076, 0.0307, 0.0358, 0.0232, 0.0229,
        0.0102, 0.0143, 0.0118, 0.0073, 0.0149, 0.0168, 0.0061, 0.0083, 0.0126,
        0.0121, 0.0163, 0.0237, 0.0147, 0.0170, 0.0498])
cls_count [25. 26. 77. 36. 42. 24. 46. 87. 24. 36. 43. 35. 22. 51. 21. 44. 27. 31.
 43. 69. 16. 50. 32. 45. 32. 61. 27. 36. 24. 24. 41. 14. 59. 67. 43. 42.
 18. 27. 22. 13. 27. 31. 11. 15. 23. 22. 31. 44. 28. 31. 13.] 0.8461538461538461 1778.0 2.715384615384615 0.007311586051743535
Accuracy = 63.22% -> 63.22%

50
ent tensor(0.0486) tensor(0.0226) tensor(0., dtype=torch.float64) tensor(0., dtype=torch.float64)
all_output1 tensor([0.0127, 0.0544, 0.0374, 0.0310, 0.0281, 0.0235, 0.0226, 0.0287, 0.0056,
        0.0418, 0.0173, 0.0435, 0.0137, 0.0275, 0.0298, 0.0146, 0.0383, 0.0139,
        0.0279, 0.0432, 0.0215, 0.0363, 0.0180, 0.0228, 0.0100, 0.0138, 0.0160,
        0.0200, 0.0246, 0.0061, 0.0081, 0.0222, 0.0063, 0.0085, 0.0107, 0.0273,
        0.0085, 0.0016, 0.0030, 0.0120, 0.0113, 0.0034, 0.0058, 0.0095, 0.0127,
        0.0083, 0.0050, 0.0138, 0.0294, 0.0194, 0.0283])
cls_count [23. 99. 68. 55. 50. 43. 41. 52. 10. 75. 31. 78. 26. 49. 54. 26. 69. 25.
 50. 79. 39. 67. 32. 42. 18. 25. 29. 36. 44. 11. 15. 40. 11. 15. 20. 49.
 15.  3.  6. 22. 20.  6. 10. 17. 23. 15.  9. 25. 54. 36.  0.] inf 1757.0 inf 0.0
Accuracy = 49.40% -> 49.40%

50
image_pretrained-fc_copy2.py:627: RuntimeWarning: divide by zero encountered in double_scalars
  print("cls_count", cls_count, min(cls_count[:-1]) / (cls_count[-1]), np.sum(cls_count),
image_pretrained-fc_copy2.py:628: RuntimeWarning: divide by zero encountered in double_scalars
  np.mean(cls_count[:-1]) / cls_count[-1], 1 - np.sum(cls_count[:-1])/np.sum(cls_count))
ent tensor(0.0448) tensor(0.3413) tensor(9.7843, dtype=torch.float64) tensor(31.9000, dtype=torch.float64)
cls_count [  32.   77.   48.   55.   36.   53.   57.   29.   52.   74.   52.   51.
   79.   86.   27.   65.   50.   12.   71.   98.   11.   61.   46.   40.
   61.   53.   53.  104.   55.   39.   75.   43.   92.   76.   41.   47.
   31.   41.   33.   38.   36.   38.   48.   52.   79.   32.   52.   86.
   76.   79. 1635.] 0.00672782874617737 4357.0 0.03329663608562691 0.3752582051870553
cls_count [ 32.  77.  48.  55.  36.  53.  57.  29.  52.  74.  52.  51.  79.  86.
  27.  65.  50.  12.  71.  98.  11.  61.  46.  40.  61.  53.  53. 104.
  55.  39.  75.  43.  92.  76.  41.  47.  31.  41.  33.  38.  36.  38.
  48.  52.  79.  32.  52.  86.  76.  79.] 0.0 11.0 104.0 0.10576923076923077
51
acc [62.74509804 85.18518519 51.28205128 88.33333333 34.375      74.13793103
 51.51515152 32.8358209  64.93506494 89.55223881 69.44444444 40.35087719
 89.33333333 91.76470588 30.50847458 63.85542169 82.69230769 11.76470588
 72.36842105 98.98989899 13.43283582 93.10344828 81.63265306 50.
 73.17073171 81.66666667 83.33333333 89.23076923 47.88732394 76.08695652
 85.22727273 38.23529412 88.88888889 84.88372093 58.49056604 60.29411765
 40.625      53.03030303 51.66666667 85.36585366 66.66666667 68.62745098
 51.85185185 90.38461538 79.01234568 51.1627907  55.         72.91666667
 94.11764706 93.15068493 88.22927329] 51 H_score 76.09977471904787
Task: office-home, Iter:621/690; Accuracy = 67.32% / 66.90% / 88.23%
