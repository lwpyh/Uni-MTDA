nohup: 忽略输入
/homes/jh015/.conda/envs/hj_trans/lib/python3.7/site-packages/torchvision/models/_utils.py:209: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and will be removed in 0.15, please use 'weights' instead.
  f"The parameter '{pretrained_param}' is deprecated since 0.13 and will be removed in 0.15, "
/homes/jh015/.conda/envs/hj_trans/lib/python3.7/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and will be removed in 0.15. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Task: C, Iter:125/1250; Accuracy = 89.77%

Task: C, Iter:250/1250; Accuracy = 90.34%

Task: C, Iter:375/1250; Accuracy = 89.77%

Task: C, Iter:500/1250; Accuracy = 90.34%

Task: C, Iter:625/1250; Accuracy = 90.34%

Task: C, Iter:750/1250; Accuracy = 89.77%

Task: C, Iter:875/1250; Accuracy = 90.91%

Task: C, Iter:1000/1250; Accuracy = 90.34%

Task: C, Iter:1125/1250; Accuracy = 90.34%

Task: C, Iter:1250/1250; Accuracy = 90.34%

Traceback (most recent call last):
  File "image_source_da2.py", line 556, in <module>
    test_target(args)
  File "image_source_da2.py", line 440, in test_target
    acc, _ = cal_acc(dset_loaders['test'], netF, netB, netC, netC_ex, False)
TypeError: cal_acc() takes from 4 to 5 positional arguments but 6 were given
ckpt/source/oda/office-home/P
Namespace(batch_size=64, bottleneck=256, class_num=15, classifier='bn', cls_par=1.0, da='oda', distance='cosine', dset='office-home', ent=True, ent_par=1.0, epsilon=1e-05, extra_class=1, gent=True, gpu_id='0', interval=5, issave=False, layer='wn', lr=0.01, lr_decay1=0.1, lr_decay2=1.0, max_epoch=5, name='office-home', name1='PA', name2='PC', name3='PR', net='resnet50', out_file=<_io.TextIOWrapper name='ckpt/target/oda/office-home-addfc+gent/log_par_1.0.txt' mode='w' encoding='UTF-8'>, output='ckpt/target', output_dir='ckpt/target/oda/office-home-addfc+gent', output_dir_src='ckpt/source/oda/office-home/P', output_src='ckpt/source', s=0, s_dset_path='./data/office-home/Product_U.txt', savename='par_1.0', seed=2020, src_classes=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], t=1, t_dset_path='./data/office-home/Art_U.txt', t_dset_path1='./data/office-home/Clipart_U.txt', t_dset_path2='./data/office-home/Real_World_U.txt', tar_classes=[10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], tar_classes1=[10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], tar_classes2=[10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], test_dset_path='./data/office-home/Art_U.txt', test_dset_path1='./data/office-home/Clipart_U.txt', test_dset_path2='./data/office-home/Real_World_U.txt', threshold=0, worker=4)
/homes/jh015/.conda/envs/hj_trans/lib/python3.7/site-packages/torchvision/models/_utils.py:209: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and will be removed in 0.15, please use 'weights' instead.
  f"The parameter '{pretrained_param}' is deprecated since 0.13 and will be removed in 0.15, "
/homes/jh015/.conda/envs/hj_trans/lib/python3.7/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and will be removed in 0.15. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
ent tensor(0.4342) tensor(0.5422) tensor(1.4546) tensor(0.5360) tensor(18.8739)
cls_count [   3.   62.   21.    2.    8.   39.    4.    7.    9.   34.   30.   48.
  129.   21.   22. 1463.] 0.001367053998632946 1902.0 0.020004556846662108 0.7691903259726603
cls_count [  3.  62.  21.   2.   8.  39.   4.   7.   9.  34.  30.  48. 129.  21.
  22.] 0.0 2.0 129.0 0.015503875968992248
16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
ent tensor(0.4182) tensor(0.5434) tensor(1.1545) tensor(0.5422) tensor(19.0331)
cls_count [7.000e+00 3.000e+00 4.800e+01 1.000e+00 1.200e+01 6.200e+01 2.500e+01
 2.800e+01 7.000e+01 6.000e+00 1.110e+02 9.200e+01 3.280e+02 1.300e+01
 2.500e+01 2.762e+03] 0.0003620564808110065 3593.0 0.02005792903692976 0.7687169496242694
cls_count [  7.   3.  48.   1.  12.  62.  25.  28.  70.   6. 111.  92. 328.  13.
  25.] 0.0 1.0 328.0 0.003048780487804878
16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
ent tensor(0.4073) tensor(0.4867) tensor(1.2243) tensor(0.5023) tensor(17.6992)
cls_count [  35.   57.   72.   14.    9.   75.   37.   58.   28.   39.  104.  144.
  327.   43.   64. 2422.] 0.0037159372419488025 3528.0 0.03044315992292871 0.6865079365079365
cls_count [ 35.  57.  72.  14.   9.  75.  37.  58.  28.  39. 104. 144. 327.  43.
  64.] 0.0 9.0 327.0 0.027522935779816515
16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
per_class_acc [14.49275362 36.         61.36363636 35.         55.         77.0783848 ] inf 40.371277997364956 77.07838479809976 52.98870726757188
Task: PA, Iter:57/285; Accuracy = 46.49% / 40.37% / 77.08%
image_t_mtda.py:196: RuntimeWarning: divide by zero encountered in true_divide
  pre_class_acc = per_class_correct / per_class_num * 100
per_class_acc [55.55555556 45.         68.68686869 17.1875     40.47619048 78.79347492] inf 45.381222943722946 78.79347491535857 57.59215545992193
Task: PC, Iter:57/285; Accuracy = 50.95% / 45.38% / 78.79%
per_class_acc [70.83333333 30.76923077 85.9375     60.52631579 84.93150685 66.77235257] inf 66.59957734827057 66.7723525681674 66.68585304832675
Task: PR, Iter:57/285; Accuracy = 66.63% / 66.60% / 66.77%
ent tensor(0.2997) tensor(0.6592) tensor(1.5301) tensor(0.5931) tensor(15.0501)
cls_count [   4.   56.   24.    3.    6.   46.    4.    7.   10.   34.   34.   53.
  152.   29.   24. 1416.] 0.00211864406779661 1902.0 0.02288135593220339 0.7444794952681388
cls_count [  4.  56.  24.   3.   6.  46.   4.   7.  10.  34.  34.  53. 152.  29.
  24.] 0.0 3.0 152.0 0.019736842105263157
16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
ent tensor(0.2145) tensor(0.6894) tensor(1.2938) tensor(0.6659) tensor(15.6589)
cls_count [4.00e+00 3.00e+00 5.20e+01 2.00e+00 0.00e+00 7.60e+01 2.20e+01 3.70e+01
 7.10e+01 5.00e+00 1.01e+02 1.07e+02 3.51e+02 1.40e+01 2.80e+01 2.72e+03] 0.0 3593.0 0.02139705882352941 0.7570275535763986
Traceback (most recent call last):
  File "image_t_mtda.py", line 851, in <module>
    train_target(args)
  File "image_t_mtda.py", line 418, in train_target
    mem_label1 = obtain_label1(dset_loaders['test1'], netF, netB, netC1, netC_ex1, iter_num, args)
  File "image_t_mtda.py", line 728, in obtain_label1
    threshold = get_thresh1(cls_count)
  File "image_t_mtda.py", line 626, in get_thresh1
    kmeans = KMeans(3, random_state=0).fit(a.reshape(-1,1))
NameError: name 'KMeans' is not defined
ckpt/source/oda/office-home/P
Namespace(batch_size=64, bottleneck=256, class_num=15, classifier='bn', cls_par=1.0, da='oda', distance='cosine', dset='office-home', ent=True, ent_par=1.0, epsilon=1e-05, extra_class=1, gent=True, gpu_id='1', interval=5, issave=False, layer='wn', lr=0.01, lr_decay1=0.1, lr_decay2=1.0, max_epoch=5, name='office-home', name1='PA', name2='PC', name3='PR', net='resnet50', out_file=<_io.TextIOWrapper name='ckpt/target/oda/office-home-addfc+gent/log_par_1.0.txt' mode='w' encoding='UTF-8'>, output='ckpt/target', output_dir='ckpt/target/oda/office-home-addfc+gent', output_dir_src='ckpt/source/oda/office-home/P', output_src='ckpt/source', s=0, s_dset_path='./data/office-home/Product_U.txt', savename='par_1.0', seed=2020, src_classes=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], t=1, t_dset_path='./data/office-home/Art_U.txt', t_dset_path1='./data/office-home/Clipart_U.txt', t_dset_path2='./data/office-home/Real_World_U.txt', tar_classes=[10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], tar_classes1=[10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], tar_classes2=[10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], test_dset_path='./data/office-home/Art_U.txt', test_dset_path1='./data/office-home/Clipart_U.txt', test_dset_path2='./data/office-home/Real_World_U.txt', threshold=0, worker=4)
/homes/jh015/.conda/envs/hj_trans/lib/python3.7/site-packages/torchvision/models/_utils.py:209: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and will be removed in 0.15, please use 'weights' instead.
  f"The parameter '{pretrained_param}' is deprecated since 0.13 and will be removed in 0.15, "
/homes/jh015/.conda/envs/hj_trans/lib/python3.7/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and will be removed in 0.15. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
ent tensor(0.4342) tensor(0.5422) tensor(1.4546) tensor(0.5360) tensor(18.8739)
cls_count [   3.   62.   21.    2.    8.   39.    4.    7.    9.   34.   30.   48.
  129.   21.   22. 1463.] 0.001367053998632946 1902.0 0.020004556846662108 0.7691903259726603
cls_count [  3.  62.  21.   2.   8.  39.   4.   7.   9.  34.  30.  48. 129.  21.
  22.] 0.0 2.0 129.0 0.015503875968992248
16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
ent tensor(0.4182) tensor(0.5434) tensor(1.1545) tensor(0.5422) tensor(19.0331)
cls_count [7.000e+00 3.000e+00 4.800e+01 1.000e+00 1.200e+01 6.200e+01 2.500e+01
 2.800e+01 7.000e+01 6.000e+00 1.110e+02 9.200e+01 3.280e+02 1.300e+01
 2.500e+01 2.762e+03] 0.0003620564808110065 3593.0 0.02005792903692976 0.7687169496242694
cls_count [  7.   3.  48.   1.  12.  62.  25.  28.  70.   6. 111.  92. 328.  13.
  25.] 0.0 1.0 328.0 0.003048780487804878
16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
ent tensor(0.4073) tensor(0.4867) tensor(1.2243) tensor(0.5023) tensor(17.6992)
cls_count [  35.   57.   72.   14.    9.   75.   37.   58.   28.   39.  104.  144.
  327.   43.   64. 2422.] 0.0037159372419488025 3528.0 0.03044315992292871 0.6865079365079365
cls_count [ 35.  57.  72.  14.   9.  75.  37.  58.  28.  39. 104. 144. 327.  43.
  64.] 0.0 9.0 327.0 0.027522935779816515
16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
per_class_acc [15.94202899 40.         61.36363636 35.         62.5        73.99049881] inf 42.961133069828726 73.99049881235155 54.35949228280542
Task: PA, Iter:57/285; Accuracy = 48.13% / 42.96% / 73.99%
image_t_mtda.py:197: RuntimeWarning: divide by zero encountered in true_divide
  pre_class_acc = per_class_correct / per_class_num * 100
per_class_acc [62.62626263 52.5        72.72727273 23.4375     42.85714286 74.82302247] inf 50.82963564213564 74.82302246845182 60.53555932525514
Task: PC, Iter:57/285; Accuracy = 54.83% / 50.83% / 74.82%
per_class_acc [71.875      30.76923077 85.9375     63.15789474 91.78082192 63.37983513] inf 68.70408948477623 63.37983512999366 65.93465294132432
Task: PR, Iter:57/285; Accuracy = 67.82% / 68.70% / 63.38%
ent tensor(0.2796) tensor(0.5781) tensor(1.4649) tensor(0.5727) tensor(17.2393)
cls_count [   4.   68.   25.    3.    7.   70.    4.    7.   11.   35.   43.   59.
  151.   30.   28. 1357.] 0.002210759027266028 1902.0 0.026774748219110786 0.713459516298633
cls_count [  4.  68.  25.   3.   7.  70.   4.   7.  11.  35.  43.  59. 151.  30.
  28.] 0.0 3.0 151.0 0.019867549668874173
16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
ent tensor(0.2478) tensor(0.6037) tensor(1.2204) tensor(0.6041) tensor(17.1111)
cls_count [6.000e+00 3.000e+00 5.400e+01 1.300e+01 2.000e+00 9.700e+01 3.000e+01
 4.000e+01 7.400e+01 8.000e+00 1.270e+02 1.650e+02 3.520e+02 2.400e+01
 3.000e+01 2.568e+03] 0.000778816199376947 3593.0 0.026609553478712356 0.7147230726412468
2
thresh [ 6.  3. 54. 13.  2. 30. 40.  8. 24. 30.] [ 97.  74. 127. 165.] [352.] [ 6.  3. 54. 13.  2. 30. 40.  8. 24. 30.]
thresh 54.0
cls_count [  6.   3.  54.  13.   2.  97.  30.  40.  74.   8. 127. 165. 352.  24.
  30.] 54.0 2.0 352.0 0.005681818181818182
7 [2, 5, 8, 10, 11, 12, 15]
ent tensor(0.2517) tensor(0.4833) tensor(1.4295) tensor(0.4946) tensor(15.1037)
cls_count [  42.   93.   82.   15.   11.  111.   39.   86.   41.   48.  125.  181.
  431.   63.   75. 2085.] 0.005275779376498801 3528.0 0.046139088729016786 0.5909863945578231
cls_count [ 42.  93.  82.  15.  11. 111.  39.  86.  41.  48. 125. 181. 431.  63.
  75.] 0.0 11.0 431.0 0.025522041763341066
16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
per_class_acc [14.49275362 36.         59.09090909 35.         60.         75.65320665] inf 40.9167325428195 75.65320665083135 53.10943874469001
Task: PA, Iter:114/285; Accuracy = 46.71% / 40.92% / 75.65%
image_t_mtda.py:197: RuntimeWarning: divide by zero encountered in true_divide
  pre_class_acc = per_class_correct / per_class_num * 100
per_class_acc [63.63636364 47.5        73.73737374 37.5        45.23809524 74.94613727] inf 53.52236652236652 74.94613727300707 62.44790762023235
Task: PC, Iter:114/285; Accuracy = 57.09% / 53.52% / 74.95%
per_class_acc [68.75       27.69230769 87.5        65.78947368 90.4109589  65.59923906] inf 68.02854805612556 65.5992390615092 66.79181154160142
Task: PR, Iter:114/285; Accuracy = 67.62% / 68.03% / 65.60%
ent tensor(0.1042) tensor(0.5682) tensor(1.4120) tensor(0.6910) tensor(21.8224)
cls_count [   4.   66.   25.    2.    7.   62.    4.    7.   11.   38.   41.   50.
  139.   30.   25. 1391.] 0.0014378145219266715 1902.0 0.024490774023484305 0.731335436382755
cls_count [  4.  66.  25.   2.   7.  62.   4.   7.  11.  38.  41.  50. 139.  30.
  25.] 0.0 2.0 139.0 0.014388489208633094
16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
ent tensor(0.1411) tensor(0.5933) tensor(1.5636) tensor(0.6615) tensor(19.1975)
cls_count [8.000e+00 4.000e+00 5.200e+01 1.000e+00 1.000e+00 9.700e+01 4.000e+01
 3.500e+01 8.600e+01 2.100e+01 1.240e+02 1.400e+02 3.500e+02 4.200e+01
 2.800e+01 2.564e+03] 0.000390015600624025 3593.0 0.02675507020280811 0.713609796827164
thresh [ 8.  4. 52.  1.  1. 40. 35. 21. 42. 28.] [350.] [ 8.  4. 52.  1.  1. 40. 35. 21. 42. 28.] [ 97.  86. 124. 140.]
thresh 52.0
cls_count [  8.   4.  52.   1.   1.  97.  40.  35.  86.  21. 124. 140. 350.  42.
  28.] 52.0 1.0 350.0 0.002857142857142857
7 [2, 5, 8, 10, 11, 12, 15]
ent tensor(0.1186) tensor(0.4625) tensor(1.4870) tensor(0.5739) tensor(18.8686)
cls_count [  40.   99.   73.    8.   11.  107.   34.   93.   44.   44.  113.  149.
  416.   66.   73. 2158.] 0.0037071362372567192 3528.0 0.042323138708680874 0.6116780045351473
cls_count [ 40.  99.  73.   8.  11. 107.  34.  93.  44.  44. 113. 149. 416.  66.
  73.] 0.0 8.0 416.0 0.019230769230769232
16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
per_class_acc [11.5942029  36.         54.54545455 35.         60.         76.72209026] inf 39.42793148880105 76.72209026128266 52.08769267401851
Task: PA, Iter:171/285; Accuracy = 45.64% / 39.43% / 76.72%
image_t_mtda.py:197: RuntimeWarning: divide by zero encountered in true_divide
  pre_class_acc = per_class_correct / per_class_num * 100
per_class_acc [60.60606061 42.5        70.70707071 39.0625     42.85714286 75.46937519] inf 51.14655483405484 75.46937519236688 60.97176770352295
Task: PC, Iter:171/285; Accuracy = 55.20% / 51.15% / 75.47%
per_class_acc [66.66666667 24.61538462 85.9375     63.15789474 90.4109589  67.21623335] inf 66.1576809846006 67.21623335447052 66.6827564488575
Task: PR, Iter:171/285; Accuracy = 66.33% / 66.16% / 67.22%
ent tensor(0.0696) tensor(0.5918) tensor(1.4248) tensor(0.7226) tensor(21.9116)
cls_count [   4.   63.   24.    2.    5.   61.    4.    7.   11.   37.   37.   51.
  127.   31.   25. 1413.] 0.0014154281670205238 1902.0 0.023071479122434537 0.7429022082018928
cls_count [  4.  63.  24.   2.   5.  61.   4.   7.  11.  37.  37.  51. 127.  31.
  25.] 0.0 2.0 127.0 0.015748031496062992
16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
ent tensor(0.1176) tensor(0.5797) tensor(1.5239) tensor(0.6784) tensor(20.5373)
cls_count [6.000e+00 6.000e+00 5.000e+01 1.000e+00 0.000e+00 1.010e+02 4.500e+01
 3.100e+01 9.200e+01 2.000e+01 1.190e+02 1.270e+02 3.440e+02 3.800e+01
 2.500e+01 2.588e+03] 0.0 3593.0 0.0258887171561051 0.7202894517116616
thresh [ 6.  6. 50.  1.  0. 45. 31. 20. 38. 25.] [344.] [ 6.  6. 50.  1.  0. 45. 31. 20. 38. 25.] [101.  92. 119. 127.]
thresh 50.0
cls_count [  6.   6.  50.   1.   0. 101.  45.  31.  92.  20. 119. 127. 344.  38.
  25.] 50.0 0.0 344.0 0.0
7 [2, 5, 8, 10, 11, 12, 15]
ent tensor(0.0823) tensor(0.4788) tensor(1.4812) tensor(0.6057) tensor(19.8176)
cls_count [  41.   94.   71.    8.    7.  105.   35.   95.   43.   37.  108.  142.
  391.   63.   73. 2215.] 0.003160270880361174 3528.0 0.03951843491346877 0.6278344671201814
cls_count [ 41.  94.  71.   8.   7. 105.  35.  95.  43.  37. 108. 142. 391.  63.
  73.] 0.0 7.0 391.0 0.017902813299232736
16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
per_class_acc [11.5942029  36.         54.54545455 35.         60.         77.25653207] inf 39.42793148880105 77.25653206650831 52.210297079298684
Task: PA, Iter:228/285; Accuracy = 45.73% / 39.43% / 77.26%
image_t_mtda.py:197: RuntimeWarning: divide by zero encountered in true_divide
  pre_class_acc = per_class_correct / per_class_num * 100
per_class_acc [60.60606061 45.         69.6969697  39.0625     45.23809524 74.91535857] inf 51.92072510822511 74.91535857186827 61.33364616656894
Task: PC, Iter:228/285; Accuracy = 55.75% / 51.92% / 74.92%
per_class_acc [66.66666667 24.61538462 85.9375     63.15789474 91.78082192 67.02599873] inf 66.43165358734032 67.02599873176919 66.72750272045415
Task: PR, Iter:228/285; Accuracy = 66.53% / 66.43% / 67.03%
ent tensor(0.0664) tensor(0.6121) tensor(1.4302) tensor(0.7252) tensor(21.0302)
cls_count [   4.   62.   24.    2.    5.   61.    4.    7.   11.   38.   37.   50.
  119.   31.   25. 1422.] 0.0014064697609001407 1902.0 0.02250351617440225 0.7476340694006309
cls_count [  4.  62.  24.   2.   5.  61.   4.   7.  11.  38.  37.  50. 119.  31.
  25.] 0.0 2.0 119.0 0.01680672268907563
16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
ent tensor(0.1009) tensor(0.5667) tensor(1.4786) tensor(0.6797) tensor(21.0163)
cls_count [9.000e+00 7.000e+00 5.100e+01 2.000e+00 0.000e+00 1.060e+02 5.700e+01
 3.100e+01 9.100e+01 2.400e+01 1.190e+02 1.240e+02 3.460e+02 3.600e+01
 2.600e+01 2.564e+03] 0.0 3593.0 0.02675507020280811 0.713609796827164
thresh [ 9.  7. 51.  2.  0. 57. 31. 24. 36. 26.] [346.] [ 9.  7. 51.  2.  0. 57. 31. 24. 36. 26.] [106.  91. 119. 124.]
thresh 57.0
cls_count [  9.   7.  51.   2.   0. 106.  57.  31.  91.  24. 119. 124. 346.  36.
  26.] 57.0 0.0 346.0 0.0
7 [5, 6, 8, 10, 11, 12, 15]
ent tensor(0.0754) tensor(0.4990) tensor(1.4904) tensor(0.6020) tensor(18.8770)
cls_count [  43.   95.   72.    8.    7.  108.   36.  103.   44.   41.  109.  145.
  372.   63.   74. 2208.] 0.003170289855072464 3528.0 0.03985507246376811 0.6258503401360545
cls_count [ 43.  95.  72.   8.   7. 108.  36. 103.  44.  41. 109. 145. 372.  63.
  74.] 0.0 7.0 372.0 0.01881720430107527
16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
per_class_acc [11.5942029  36.         54.54545455 35.         60.         77.49406176] inf 39.42793148880105 77.4940617577197 52.264428153053416
Task: PA, Iter:285/285; Accuracy = 45.77% / 39.43% / 77.49%
image_t_mtda.py:197: RuntimeWarning: divide by zero encountered in true_divide
  pre_class_acc = per_class_correct / per_class_num * 100
per_class_acc [59.5959596  40.         69.6969697  40.625      45.23809524 75.37703909] inf 51.031204906204906 75.37703908895045 60.85965606987894
Task: PC, Iter:285/285; Accuracy = 55.09% / 51.03% / 75.38%
per_class_acc [66.66666667 21.53846154 85.9375     63.15789474 89.04109589 67.34305644] inf 65.26832376647626 67.3430564362714 66.289460288953
Task: PR, Iter:285/285; Accuracy = 65.61% / 65.27% / 67.34%
ckpt/source/oda/office-home/P
Namespace(batch_size=64, bottleneck=256, class_num=15, classifier='bn', cls_par=1.0, da='oda', distance='cosine', dset='office-home', ent=True, ent_par=1.0, epsilon=1e-05, extra_class=1, gent=True, gpu_id='1', interval=5, issave=False, layer='wn', lr=0.01, lr_decay1=0.1, lr_decay2=1.0, max_epoch=5, name='office-home', name1='PA', name2='PC', name3='PR', net='resnet50', out_file=<_io.TextIOWrapper name='ckpt/target/oda/office-home-addfc+gent/log_par_1.0.txt' mode='w' encoding='UTF-8'>, output='ckpt/target', output_dir='ckpt/target/oda/office-home-addfc+gent', output_dir_src='ckpt/source/oda/office-home/P', output_src='ckpt/source', s=0, s_dset_path='./data/office-home/Product_U.txt', savename='par_1.0', seed=2020, src_classes=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], t=1, t_dset_path='./data/office-home/Art_U.txt', t_dset_path1='./data/office-home/Clipart_U.txt', t_dset_path2='./data/office-home/Real_World_U.txt', tar_classes=[10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], tar_classes1=[10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], tar_classes2=[10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], test_dset_path='./data/office-home/Art_U.txt', test_dset_path1='./data/office-home/Clipart_U.txt', test_dset_path2='./data/office-home/Real_World_U.txt', threshold=0, worker=4)
/homes/jh015/.conda/envs/hj_trans/lib/python3.7/site-packages/torchvision/models/_utils.py:209: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and will be removed in 0.15, please use 'weights' instead.
  f"The parameter '{pretrained_param}' is deprecated since 0.13 and will be removed in 0.15, "
/homes/jh015/.conda/envs/hj_trans/lib/python3.7/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and will be removed in 0.15. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
ent tensor(0.4342) tensor(0.5422) tensor(1.4546) tensor(0.5360) tensor(18.8739)
cls_count [   3.   62.   21.    2.    8.   39.    4.    7.    9.   34.   30.   48.
  129.   21.   22. 1463.] 0.001367053998632946 1902.0 0.020004556846662108 0.7691903259726603
cls_count [  3.  62.  21.   2.   8.  39.   4.   7.   9.  34.  30.  48. 129.  21.
  22.] 0.0 2.0 129.0 0.015503875968992248
16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
ent tensor(0.4182) tensor(0.5434) tensor(1.1545) tensor(0.5422) tensor(19.0331)
cls_count [7.000e+00 3.000e+00 4.800e+01 1.000e+00 1.200e+01 6.200e+01 2.500e+01
 2.800e+01 7.000e+01 6.000e+00 1.110e+02 9.200e+01 3.280e+02 1.300e+01
 2.500e+01 2.762e+03] 0.0003620564808110065 3593.0 0.02005792903692976 0.7687169496242694
cls_count [  7.   3.  48.   1.  12.  62.  25.  28.  70.   6. 111.  92. 328.  13.
  25.] 0.0 1.0 328.0 0.003048780487804878
16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
ent tensor(0.4073) tensor(0.4867) tensor(1.2243) tensor(0.5023) tensor(17.6992)
cls_count [  35.   57.   72.   14.    9.   75.   37.   58.   28.   39.  104.  144.
  327.   43.   64. 2422.] 0.0037159372419488025 3528.0 0.03044315992292871 0.6865079365079365
cls_count [ 35.  57.  72.  14.   9.  75.  37.  58.  28.  39. 104. 144. 327.  43.
  64.] 0.0 9.0 327.0 0.027522935779816515
16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
per_class_acc [15.94202899 36.         61.36363636 40.         60.         73.63420428] inf 42.66113306982872 73.63420427553444 54.02312179998632
Task: PA, Iter:57/285; Accuracy = 47.82% / 42.66% / 73.63%
image_t_mtda.py:197: RuntimeWarning: divide by zero encountered in true_divide
  pre_class_acc = per_class_correct / per_class_num * 100
per_class_acc [53.53535354 17.5        64.64646465 17.1875     42.85714286 80.64019698] inf 39.14529220779221 80.64019698368729 52.705617281811826
Task: PC, Iter:57/285; Accuracy = 46.06% / 39.15% / 80.64%
per_class_acc [73.95833333 32.30769231 85.9375     71.05263158 91.78082192 58.08497146] inf 71.00739582755625 58.08497146480659 63.899402372766566
Task: PR, Iter:57/285; Accuracy = 68.85% / 71.01% / 58.08%
ent tensor(0.2565) tensor(0.5522) tensor(1.5147) tensor(0.5828) tensor(18.4694)
cls_count [   4.   75.   36.    4.    7.   61.    4.    8.   10.   37.   41.   57.
  147.   37.   28. 1346.] 0.0029717682020802376 1902.0 0.027538385339276873 0.7076761303890642
cls_count [  4.  75.  36.   4.   7.  61.   4.   8.  10.  37.  41.  57. 147.  37.
  28.] 0.0 4.0 147.0 0.027210884353741496
16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
ent tensor(0.1813) tensor(0.6846) tensor(1.2803) tensor(0.7035) tensor(17.2958)
cls_count [   5.    4.   41.    4.    0.   71.   22.   41.   64.    4.   99.   76.
  318.   16.   27. 2801.] 0.0 3593.0 0.018850410567654408 0.7795713888115781
cls_count [  5.   4.  41.   4.   0.  71.  22.  41.  64.   4.  99.  76. 318.  16.
  27.] 0.0 0.0 318.0 0.0
16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
ent tensor(0.2609) tensor(0.4596) tensor(1.3933) tensor(0.4514) tensor(13.1375)
cls_count [  44.  110.  123.   27.   17.  118.   45.  103.   42.   64.  127.  209.
  444.   77.   78. 1900.] 0.008947368421052631 3528.0 0.05712280701754386 0.5385487528344671
cls_count [ 44. 110. 123.  27.  17. 118.  45. 103.  42.  64. 127. 209. 444.  77.
  78.] 0.0 17.0 444.0 0.038288288288288286
16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
per_class_acc [13.04347826 36.         59.09090909 42.5        60.         72.44655582] inf 42.12687747035573 72.44655581947742 53.27495375714173
Task: PA, Iter:114/285; Accuracy = 47.18% / 42.13% / 72.45%
per_class_acc [50.50505051 15.         56.56565657 17.1875     42.85714286 83.50261619] inf 36.42306998556999 83.50261618959681 50.721771631299895
Task: PC, Iter:114/285; Accuracy = 44.27% / 36.42% / 83.50%
per_class_acc [76.04166667 33.84615385 82.8125     69.73684211 93.15068493 50.50729233] inf 71.1175695099181 50.507292327203544 59.06614517100869
Task: PR, Iter:114/285; Accuracy = 67.68% / 71.12% / 50.51%
ent tensor(0.1837) tensor(0.5563) tensor(1.5472) tensor(0.6131) tensor(18.8535)
cls_count [   4.   85.   40.   21.   19.   53.    4.    9.   16.   43.   32.   53.
  139.   40.   26. 1318.] 0.0030349013657056147 1902.0 0.029539706626201312 0.6929547844374343
cls_count [  4.  85.  40.  21.  19.  53.   4.   9.  16.  43.  32.  53. 139.  40.
  26.] 0.0 4.0 139.0 0.02877697841726619
16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
ent tensor(0.0440) tensor(0.7191) tensor(1.5491) tensor(0.7983) tensor(18.1447)
cls_count [   4.    4.   44.    8.    3.   61.   21.   44.   71.    4.   82.   39.
  259.   16.   26. 2907.] 0.0010319917440660474 3593.0 0.01573214080954019 0.8090731978847759
cls_count [  4.   4.  44.   8.   3.  61.  21.  44.  71.   4.  82.  39. 259.  16.
  26.] 0.0 3.0 259.0 0.011583011583011582
16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
ent tensor(0.2098) tensor(0.4323) tensor(1.2717) tensor(0.4038) tensor(10.6505)
cls_count [  48.  172.  137.   92.   36.  129.   64.  120.   58.   80.  130.  213.
  451.   79.   80. 1639.] 0.021964612568639415 3528.0 0.07683546878177751 0.4645691609977324
cls_count [ 48. 172. 137.  92.  36. 129.  64. 120.  58.  80. 130. 213. 451.  79.
  80.] 0.0 36.0 451.0 0.07982261640798226
16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
per_class_acc [13.04347826 36.         59.09090909 42.5        62.5        71.49643705] inf 42.62687747035573 71.49643705463184 53.4101182493696
Task: PA, Iter:171/285; Accuracy = 47.44% / 42.63% / 71.50%
per_class_acc [45.45454545 10.         45.45454545 17.1875     40.47619048 85.99569098] inf 31.71455627705628 85.99569098184057 46.3394690732295
Task: PC, Iter:171/285; Accuracy = 40.76% / 31.71% / 86.00%
per_class_acc [70.83333333 35.38461538 82.8125     68.42105263 93.15068493 43.40519975] inf 70.1204372562069 43.40519974635384 53.61945840195866
Task: PR, Iter:171/285; Accuracy = 65.67% / 70.12% / 43.41%
ent tensor(0.1914) tensor(0.5673) tensor(1.5359) tensor(0.5947) tensor(17.5049)
cls_count [   5.   85.   40.   36.   22.   54.    6.   15.   15.   41.   31.   53.
  139.   39.   27. 1294.] 0.0038639876352395673 1902.0 0.031324059763008755 0.6803364879074658
cls_count [  5.  85.  40.  36.  22.  54.   6.  15.  15.  41.  31.  53. 139.  39.
  27.] 0.0 5.0 139.0 0.03597122302158273
16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
ent tensor(0.0224) tensor(0.7697) tensor(1.4679) tensor(0.8332) tensor(16.0626)
cls_count [6.000e+00 5.000e+00 3.200e+01 7.000e+00 3.000e+00 5.100e+01 1.900e+01
 4.700e+01 6.200e+01 4.000e+00 6.700e+01 2.700e+01 2.160e+02 1.600e+01
 2.300e+01 3.008e+03] 0.0009973404255319148 3593.0 0.012965425531914893 0.8371834121903702
cls_count [  6.   5.  32.   7.   3.  51.  19.  47.  62.   4.  67.  27. 216.  16.
  23.] 0.0 3.0 216.0 0.013888888888888888
16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
ent tensor(0.2197) tensor(0.4177) tensor(1.1588) tensor(0.3414) tensor(7.9175)
cls_count [  53.  197.  144.  181.   68.  151.   76.  137.   63.   88.  119.  234.
  456.   77.   79. 1405.] 0.03772241992882562 3528.0 0.10073546856465006 0.3982426303854876
cls_count [ 53. 197. 144. 181.  68. 151.  76. 137.  63.  88. 119. 234. 456.  77.
  79.] 0.0 53.0 456.0 0.1162280701754386
16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
per_class_acc [13.04347826 32.         56.81818182 40.         60.         72.14964371] inf 40.37233201581027 72.14964370546319 51.7738753132944
Task: PA, Iter:228/285; Accuracy = 45.67% / 40.37% / 72.15%
per_class_acc [43.43434343 10.         39.39393939 17.1875     40.47619048 87.65774084] inf 30.098394660894662 87.65774084333641 44.81052758207009
Task: PC, Iter:228/285; Accuracy = 39.69% / 30.10% / 87.66%
per_class_acc [75.         33.84615385 81.25       68.42105263 91.78082192 40.58338618] inf 70.0596056791082 40.58338617628409 51.3951400798977
Task: PR, Iter:228/285; Accuracy = 65.15% / 70.06% / 40.58%
ent tensor(0.1635) tensor(0.5777) tensor(1.5566) tensor(0.6259) tensor(18.1898)
cls_count [   5.   80.   41.   42.   22.   51.    6.   13.   16.   41.   31.   52.
  129.   39.   25. 1309.] 0.0038197097020626434 1902.0 0.030201171377641965 0.688222923238696
cls_count [  5.  80.  41.  42.  22.  51.   6.  13.  16.  41.  31.  52. 129.  39.
  25.] 0.0 5.0 129.0 0.03875968992248062
16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
ent tensor(0.0155) tensor(0.7966) tensor(1.4541) tensor(0.8555) tensor(14.8781)
cls_count [7.000e+00 6.000e+00 2.700e+01 6.000e+00 2.000e+00 4.700e+01 1.600e+01
 4.600e+01 6.000e+01 5.000e+00 6.200e+01 2.400e+01 1.740e+02 1.600e+01
 2.300e+01 3.072e+03] 0.0006510416666666666 3593.0 0.01130642361111111 0.8549958252156972
cls_count [  7.   6.  27.   6.   2.  47.  16.  46.  60.   5.  62.  24. 174.  16.
  23.] 0.0 2.0 174.0 0.011494252873563218
16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
ent tensor(0.2193) tensor(0.4034) tensor(1.2060) tensor(0.3184) tensor(7.0798)
cls_count [  55.  192.  140.  222.   95.  153.   78.  142.   69.   98.  121.  257.
  438.   75.   78. 1315.] 0.04182509505703422 3528.0 0.11219264892268695 0.37273242630385484
cls_count [ 55. 192. 140. 222.  95. 153.  78. 142.  69.  98. 121. 257. 438.  75.
  78.] 0.0 55.0 438.0 0.12557077625570776
16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
per_class_acc [13.04347826 32.         56.81818182 42.5        60.         72.62470309] inf 40.87233201581027 72.62470308788599 52.306934263889815
Task: PA, Iter:285/285; Accuracy = 46.16% / 40.87% / 72.62%
per_class_acc [40.4040404   7.5        30.3030303  15.625      38.0952381  90.05847953] inf 26.38546176046176 90.05847953216374 40.8133654962729
Task: PC, Iter:285/285; Accuracy = 37.00% / 26.39% / 90.06%
per_class_acc [76.04166667 30.76923077 81.25       68.42105263 93.15068493 39.88585923] inf 69.92652699979665 39.8858592263792 50.79717703900808
Task: PR, Iter:285/285; Accuracy = 64.92% / 69.93% / 39.89%
